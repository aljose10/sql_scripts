{%- macro optional_string_to_date(column_name) -%}
case
    when {{ column_name }} = '' then null

    -- yyyyMMdd (e.g., 20240131)
    when {{ column_name }} rlike '^[0-9]{8}$' and substring({{ column_name }}, 1, 4) between '1900' and '2100'
    then to_date({{ column_name }}, 'yyyyMMdd')

    -- MMddyyyy (e.g., 02132011)
    when {{ column_name }} rlike '^[0-9]{8}$' and substring({{ column_name }}, 5, 4) between '1900' and '2100'
    then to_date({{ column_name }}, 'MMddyyyy')

    -- M/d/yyyy
    when {{ column_name }} rlike '^[0-9]{1}/[0-9]{1}/[0-9]{4}$' then to_date({{ column_name }}, 'M/d/yyyy')
    -- MM/d/yyyy
    when {{ column_name }} rlike '^[0-9]{2}/[0-9]{1}/[0-9]{4}$' then to_date({{ column_name }}, 'MM/d/yyyy')
    -- M/dd/yyyy
    when {{ column_name }} rlike '^[0-9]{1}/[0-9]{2}/[0-9]{4}$' then to_date({{ column_name }}, 'M/dd/yyyy')
    -- MM/dd/yyyy
    when {{ column_name }} rlike '^[0-9]{2}/[0-9]{2}/[0-9]{4}$' then to_date({{ column_name }}, 'MM/dd/yyyy')

    else null
end
{%- endmacro -%}
---
SELECT death_date
FROM your_table_name
WHERE death_date RLIKE '^[0-9]{8}$'
  AND NOT (
    -- Valid yyyyMMdd (e.g., 20240131)
    (
      SUBSTRING(death_date, 1, 4) BETWEEN '1900' AND '2100' AND
      SUBSTRING(death_date, 5, 2) BETWEEN '01' AND '12'
    )
    OR
    -- Valid MMddyyyy (e.g., 02132011)
    (
      SUBSTRING(death_date, 5, 4) BETWEEN '1900' AND '2100' AND
      SUBSTRING(death_date, 1, 2) BETWEEN '01' AND '12'
    )
  )
-----
SELECT
 death_date,
 CASE
   -- Valid yyyyMMdd format (e.g., 20240131)
   WHEN LENGTH(death_date) = 8
        AND SUBSTRING(death_date, 1, 4) BETWEEN '1900' AND '2024'
        AND SUBSTRING(death_date, 5, 2) BETWEEN '01' AND '12'
        AND SUBSTRING(death_date, 7, 2) BETWEEN '01' AND '31'
   THEN TO_DATE(death_date, 'yyyyMMdd')
   -- Optionally handle MMddyyyy (e.g., 02132011)
   WHEN LENGTH(death_date) = 8
        AND SUBSTRING(death_date, 1, 2) BETWEEN '01' AND '12'
        AND SUBSTRING(death_date, 3, 2) BETWEEN '01' AND '31'
        AND SUBSTRING(death_date, 5, 4) BETWEEN '1900' AND '2024'
   THEN TO_DATE(death_date, 'MMddyyyy')
   ELSE NULL -- Replace invalid formats with NULL
 END AS clean_death_date
FROM your_table;
--------
CASE
  -- MM/dd/yyyy (e.g., 2/3/2022)
  WHEN death_date RLIKE '^[0-9]{1,2}/[0-9]{1,2}/[0-9]{4}$'
    THEN to_date(death_date, 'MM/dd/yyyy')

  -- MM/dd/yy (e.g., 02/18/17)
  WHEN death_date RLIKE '^[0-9]{1,2}/[0-9]{1,2}/[0-9]{2}$'
    THEN to_date(death_date, 'MM/dd/yy')

  -- MM/yyyy (e.g., 02/2017)
  WHEN death_date RLIKE '^[0-9]{2}/[0-9]{4}$'
    THEN to_date(CONCAT(death_date, '/01'), 'MM/yyyy/dd')

  -- MM/yy (e.g., 10/16)
  WHEN death_date RLIKE '^[0-9]{2}/[0-9]{2}$'
    THEN to_date(CONCAT(death_date, '/01'), 'MM/yy/dd')

  -- MMddyyyy (e.g., 02162018)
  WHEN death_date RLIKE '^[0-1][0-9][0-3][0-9][0-9]{4}$'
    THEN to_date(death_date, 'MMddyyyy')

  -- yyyyMMdd (e.g., 20250201)
  WHEN death_date RLIKE '^[0-9]{8}$'
    THEN to_date(death_date, 'yyyyMMdd')

  -- 00002010 â†’ take 2010 only
  WHEN death_date RLIKE '^0000[0-9]{4}$'
    THEN to_date(CONCAT('01/01/', RIGHT(death_date, 4)), 'MM/dd/yyyy')

  ELSE NULL
END AS death_date

